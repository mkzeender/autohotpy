from typing import Literal, overload
from autohotpy.static_typing.classes import BoolInt, Nothing
from autohotpy.static_typing.classes.buffer import BufferLike, BufferOrAddress
from autohotpy.static_typing.classes.object_ import Object

class File(Object):
    def Read(self, chars: int, /) -> str: ...
    def Write(self, string: str, /) -> int: ...
    def ReadLine(self) -> str: ...
    def WriteLine(self, string: str) -> int: ...
    def ReadUInt(self) -> int | Nothing: ...
    def ReadInt(self) -> int | Nothing: ...
    def ReadInt64(self) -> int | Nothing: ...
    def ReadShort(self) -> int | Nothing: ...
    def ReadUShort(self) -> int | Nothing: ...
    def ReadChar(self) -> int | Nothing: ...
    def ReadUChar(self) -> int | Nothing: ...
    def ReadDouble(self) -> float | Nothing: ...
    def ReadFloat(self) -> float | Nothing: ...
    def WriteUInt(self, number: int) -> int: ...
    def WriteInt(self, number: int) -> int: ...
    def WriteInt64(self, number: int) -> int: ...
    def WriteShort(self, number: int) -> int: ...
    def WriteUShort(self, number: int) -> int: ...
    def WriteChar(self, number: int) -> int: ...
    def WriteUChar(self, number: int) -> int: ...
    def WriteDouble(self, number: float) -> int: ...
    def WriteFloat(self, number: float) -> int: ...
    def RawRead(self, Buffer: BufferOrAddress, nbytes=...) -> int: ...
    def RawWrite(self, data: BufferOrAddress | str, nbytes=...) -> int: ...
    def Seek(self, distance: int, origin: Literal[0, 1, 2]) -> BoolInt: ...
    def Close(self) -> Nothing: ...

    Pos: int
    Length: int
    AtEOF: BoolInt
    Encoding: str
    Handle: int
